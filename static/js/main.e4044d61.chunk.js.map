{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Rank/doglify-logo.png","Components/Rank/Rank.js","Components/Signin/Signin.js","Components/Register/Register.js","Components/ImageLinkForm/ImageLinkForm.js","Components/FaceRecognition/pictures/borys5.png","Components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Rank","name","entries","src","doglifyLogo","alt","width","height","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","document","getElementById","classList","toggle","signInEmai","this","htmlFor","type","onChange","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","onButtonSubmit","placeholder","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","testfoto","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","count","Object","assign","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4044d61.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../index.css\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signout\")}\r\n          className=\"custom-dbrown f3 link dim underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"Signin\")}\r\n          className=\"custom-dbrown f3 link dim underline pa3 pointer\"\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"Register\")}\r\n          className=\"custom-dbrown f3 link dim underline pa3 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/doglify-logo.d665c382.png\";","import React from \"react\";\r\nimport \"../../index.css\";\r\nimport doglifyLogo from \"./doglify-logo.png\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <img src={doglifyLogo} alt=\"doglify-logo\" width=\"250\" height=\"250\" />\r\n      </div>\r\n      <div className=\"custom-beige f3 f\">{`${name}, so far you have Doglified ${entries} pictures.`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./Signin.css\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmai: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://damp-everglades-56228.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          let cred = document.getElementById(\"wrong\");\r\n          cred.classList.toggle(\"wrongCred\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba dark-gray #eebbc3 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center pink custom-brown\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh custom-brown\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label\r\n                  className=\"db fw6 lh-copy f6 custom-brown\"\r\n                  htmlFor=\"email-address\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label\r\n                  className=\"db fw6 lh-copy f6 custom-brown\"\r\n                  htmlFor=\"password\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"wrongCred f6 red pa3\" id=\"wrong\">\r\n              Invalid username and/or password.\r\n              <br /> Please try again.\r\n            </div>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"button b ph3 pv2 input-reset br2 ba b--black grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"Register\")}\r\n                className=\"f6 link dim black db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport \"../../index.css\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://damp-everglades-56228.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 pink custom-brown center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"button b ph3 pv2 input-reset ba b--black grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"../../index.css\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f4 custom-beige\">\r\n        {\r\n          \"Enter a URL to Doglify your picture. Give it a try. I know you want to.\"\r\n        }\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa3\">\r\n          <input\r\n            className=\"montreg f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            placeholder=\"insert URL\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"myButton br2 w-30 grow link \"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","export default __webpack_public_path__ + \"static/media/borys5.88395bfe.png\";","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\nimport testfoto from \"./pictures/borys5.png\";\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img\r\n          id=\"inputimage\"\r\n          alt=\"\"\r\n          src={imageUrl}\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.topRow,\r\n            right: box.rightCol,\r\n            bottom: box.bottomRow,\r\n            left: box.leftCol\r\n          }}\r\n        >\r\n          <img id=\"dogdog\" src={testfoto} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\nimport Navigation from \"./Components/Navigation/Navigation\";\r\nimport Rank from \"./Components/Rank/Rank\";\r\nimport Signin from \"./Components/Signin/Signin\";\r\nimport Register from \"./Components/Register/Register\";\r\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\r\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\r\nimport \"tachyons\";\r\n// import Particles from \"react-particles-js\";\r\n\r\nimport \"./App.css\";\r\n\r\n// const particlesOptions = {\r\n//   particles: {\r\n//     number: { value: 30, density: { enable: true, value_area: 200 } }\r\n//   }\r\n// };\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  box: {},\r\n  route: \"Signin\",\r\n  isSignedIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      imageUrl: \"\",\r\n      box: {},\r\n      route: \"Signin\",\r\n      isSignedIn: false,\r\n      user: {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        entries: 0,\r\n        joined: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  loadUser = data => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  };\r\n\r\n  calculateFaceLocation = data => {\r\n    const clarifaiFace =\r\n      data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById(\"inputimage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - clarifaiFace.right_col * width,\r\n      bottomRow: height - clarifaiFace.bottom_row * height\r\n    };\r\n  };\r\n\r\n  displayFaceBox = box => {\r\n    console.log(box);\r\n    this.setState({ box: box });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch(\"https://damp-everglades-56228.herokuapp.com/imageurl\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        input: this.state.input\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response) {\r\n          fetch(\"https://damp-everglades-56228.herokuapp.com/image\", {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count }));\r\n            })\r\n            .catch(console.log);\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === \"signout\") {\r\n      this.setState(initialState);\r\n    } else if (route === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Particles className=\"particles\" params={particlesOptions} /> */}\r\n        <Navigation\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <Rank\r\n              name={this.state.user.name}\r\n              entries={this.state.user.entries}\r\n            />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n\r\n            <FaceRecognition box={box} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === \"Signin\" ? (\r\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}